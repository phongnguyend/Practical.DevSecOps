{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "7101297644779487874"
    }
  },
  "parameters": {
    "general": {
      "type": "object",
      "defaultValue": {
        "location": "southeastasia"
      }
    },
    "featureFlags": {
      "type": "object",
      "defaultValue": {
        "enablePrivateEndpoints": false,
        "enableApplicationGateway": false,
        "enableApiManagement": false,
        "enableAppConfiguration": false,
        "enableBlobStorage": false,
        "enableCosmosDb": false,
        "enableServiceBus": false,
        "enableWAF": false
      }
    },
    "networking": {
      "type": "object",
      "defaultValue": {
        "vnetName": "PracticalMultipleResourceGroups-vnet"
      }
    },
    "apiManagement": {
      "type": "object",
      "defaultValue": {
        "name": "PracticalMultipleResourceGroups-apim",
        "publisherEmail": "admin@practical.devsecops",
        "publisherName": "Practical DevSecOps",
        "sku": "Premium",
        "capacity": 1
      }
    },
    "webApps": {
      "type": "object",
      "defaultValue": {
        "apps": {
          "customerPublic": "PracticalMultipleResourceGroups-CUSTOMER-PUBLIC",
          "customerSite": "PracticalMultipleResourceGroups-CUSTOMER-SITE",
          "adminPublic": "PracticalMultipleResourceGroups-ADMIN-PUBLIC",
          "adminSite": "PracticalMultipleResourceGroups-ADMIN-SITE",
          "videoApi": "PracticalMultipleResourceGroups-VIDEO-API",
          "musicApi": "PracticalMultipleResourceGroups-MUSIC-API"
        }
      }
    },
    "applicationGateway": {
      "type": "object",
      "defaultValue": {
        "waf": {
          "mode": "Prevention",
          "ruleSetVersion": "3.2",
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        }
      }
    }
  },
  "variables": {
    "commonTags": {
      "Environment": "Development",
      "Project": "PracticalMultipleResourceGroups"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apiManagementNSGDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('general').location]"
          },
          "name": {
            "value": "[format('{0}-apim-nsg', parameters('networking').vnetName)]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "2567184009077236992"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-09-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowHTTPSInbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowHTTPInbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1010,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowAPIManagementEndpoint",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "ApiManagement",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 1020,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowAzureInfrastructureBalancer",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "6390",
                      "sourceAddressPrefix": "AzureLoadBalancer",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1030,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "AllowStorageOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Storage",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowSQLOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "SQL",
                      "access": "Allow",
                      "priority": 1010,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "AllowKeyVaultOutbound",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureKeyVault",
                      "access": "Allow",
                      "priority": 1020,
                      "direction": "Outbound"
                    }
                  }
                ]
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "apiManagementNSGId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
            },
            "apiManagementNSGName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "virtualNetworkDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('general').location]"
          },
          "vnetName": {
            "value": "[parameters('networking').vnetName]"
          },
          "vnetAddressPrefix": {
            "value": "10.0.0.0/16"
          },
          "apiManagementNSGId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'apiManagementNSGDeployment'), '2022-09-01').outputs.apiManagementNSGId.value]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "7718784923379606001"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16"
            },
            "apiManagementNSGId": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-09-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AppGatewaySubnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "PrivateEndpointSubnet",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "TestVMSubnet",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "APIManagementSubnet",
                    "properties": {
                      "addressPrefix": "10.0.4.0/24",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "networkSecurityGroup": {
                        "id": "[parameters('apiManagementNSGId')]"
                      }
                    }
                  },
                  {
                    "name": "VNetIntegrationSubnet",
                    "properties": {
                      "addressPrefix": "10.0.5.0/24",
                      "delegations": [
                        {
                          "name": "Microsoft.Web.serverFarms",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ],
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.Storage"
                        },
                        {
                          "service": "Microsoft.Sql"
                        },
                        {
                          "service": "Microsoft.KeyVault"
                        },
                        {
                          "service": "Microsoft.AzureCosmosDB"
                        },
                        {
                          "service": "Microsoft.ServiceBus"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Enabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ]
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            },
            "vnetName": {
              "type": "string",
              "value": "[parameters('vnetName')]"
            },
            "appGatewaySubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/AppGatewaySubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
            },
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/PrivateEndpointSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
            },
            "testVMSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/TestVMSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
            },
            "apiManagementSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/APIManagementSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
            },
            "vnetIntegrationSubnetId": {
              "type": "string",
              "value": "[format('{0}/subnets/VNetIntegrationSubnet', resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'apiManagementNSGDeployment')]"
      ]
    },
    {
      "condition": "[parameters('featureFlags').enablePrivateEndpoints]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "privateDnsZonesDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "enablePrivateEndpoints": {
            "value": "[parameters('featureFlags').enablePrivateEndpoints]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment'), '2022-09-01').outputs.vnetId.value]"
          },
          "vnetName": {
            "value": "[parameters('networking').vnetName]"
          },
          "customerSiteWebAppName": {
            "value": "[parameters('webApps').apps.customerSite]"
          },
          "adminSiteWebAppName": {
            "value": "[parameters('webApps').apps.adminSite]"
          },
          "videoApiWebAppName": {
            "value": "[parameters('webApps').apps.videoApi]"
          },
          "musicApiWebAppName": {
            "value": "[parameters('webApps').apps.musicApi]"
          },
          "applicationGatewayPublicIP": "[if(parameters('featureFlags').enableApplicationGateway, createObject('value', reference(resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment'), '2022-09-01').outputs.publicIPAddress.value), createObject('value', '0.0.0.0'))]",
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "10788927844375691601"
            }
          },
          "parameters": {
            "enablePrivateEndpoints": {
              "type": "bool",
              "defaultValue": false
            },
            "vnetId": {
              "type": "string"
            },
            "vnetName": {
              "type": "string"
            },
            "customerSiteWebAppName": {
              "type": "string",
              "defaultValue": ""
            },
            "adminSiteWebAppName": {
              "type": "string",
              "defaultValue": ""
            },
            "videoApiWebAppName": {
              "type": "string",
              "defaultValue": ""
            },
            "musicApiWebAppName": {
              "type": "string",
              "defaultValue": ""
            },
            "applicationGatewayPublicIP": {
              "type": "string",
              "defaultValue": "0.0.0.0"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appConfigPrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "1892300972090945522"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "privatelink.azconfig.io"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-vnet-link', parameters('zoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "blobStoragePrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "16404793510427032689"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-blob-link', parameters('vnetName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "fileStoragePrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "1796865358391286435"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.file.{0}', environment().suffixes.storage)]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-file-link', parameters('vnetName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "queueStoragePrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "13671633896724806013"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.queue.{0}', environment().suffixes.storage)]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-queue-link', parameters('vnetName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "tableStoragePrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11892511246290128727"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "[format('privatelink.table.{0}', environment().suffixes.storage)]"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-table-link', parameters('vnetName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "cosmosPrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "9091508506592897511"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.documents.azure.com",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.documents.azure.com', 'cosmos-dns-vnet-link')]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "privatelink.documents.azure.com"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "serviceBusPrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "9175820471686347671"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.servicebus.windows.net",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {}
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', 'privatelink.servicebus.windows.net', 'vnet-link')]",
                      "location": "global",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "privatelink.servicebus.windows.net"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "keyVaultPrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "13381812370438984700"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "privatelink.vaultcore.azure.net"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-vnet-link', parameters('zoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appServicePrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10941617295865020317"
                    }
                  },
                  "parameters": {
                    "vnetId": {
                      "type": "string"
                    },
                    "zoneName": {
                      "type": "string",
                      "defaultValue": "privatelink.azurewebsites.net"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('zoneName')]",
                      "location": "global",
                      "properties": {},
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('zoneName'), format('{0}-vnet-link', parameters('zoneName')))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "privateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('zoneName'))]"
                    },
                    "privateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('zoneName')]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[parameters('enablePrivateEndpoints')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "customPrivateDnsZoneDeployment",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "global"
                  },
                  "vnetId": {
                    "value": "[parameters('vnetId')]"
                  },
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "customerSiteWebAppName": {
                    "value": "[parameters('customerSiteWebAppName')]"
                  },
                  "adminSiteWebAppName": {
                    "value": "[parameters('adminSiteWebAppName')]"
                  },
                  "videoApiWebAppName": {
                    "value": "[parameters('videoApiWebAppName')]"
                  },
                  "musicApiWebAppName": {
                    "value": "[parameters('musicApiWebAppName')]"
                  },
                  "applicationGatewayPublicIP": {
                    "value": "[parameters('applicationGatewayPublicIP')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17555443040645401497"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "global"
                    },
                    "vnetId": {
                      "type": "string"
                    },
                    "vnetName": {
                      "type": "string"
                    },
                    "customDomainName": {
                      "type": "string",
                      "defaultValue": "rookies.internal"
                    },
                    "applicationGatewayPublicIP": {
                      "type": "string",
                      "defaultValue": "0.0.0.0"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "customerSiteWebAppName": {
                      "type": "string"
                    },
                    "adminSiteWebAppName": {
                      "type": "string"
                    },
                    "videoApiWebAppName": {
                      "type": "string"
                    },
                    "musicApiWebAppName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('customDomainName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), format('{0}-custom-link', parameters('vnetName')))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[parameters('vnetId')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/CNAME",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'customer-site')]",
                      "properties": {
                        "cnameRecord": {
                          "cname": "[format('{0}.privatelink.azurewebsites.net', parameters('customerSiteWebAppName'))]"
                        },
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/CNAME",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'admin-site')]",
                      "properties": {
                        "cnameRecord": {
                          "cname": "[format('{0}.privatelink.azurewebsites.net', parameters('adminSiteWebAppName'))]"
                        },
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/CNAME",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'video-api')]",
                      "properties": {
                        "cnameRecord": {
                          "cname": "[format('{0}.privatelink.azurewebsites.net', parameters('videoApiWebAppName'))]"
                        },
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/CNAME",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'music-api')]",
                      "properties": {
                        "cnameRecord": {
                          "cname": "[format('{0}.privatelink.azurewebsites.net', parameters('musicApiWebAppName'))]"
                        },
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/A",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'customer-public-web')]",
                      "properties": {
                        "aRecords": [
                          {
                            "ipv4Address": "[parameters('applicationGatewayPublicIP')]"
                          }
                        ],
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/A",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/{1}', parameters('customDomainName'), 'admin-public-web')]",
                      "properties": {
                        "aRecords": [
                          {
                            "ipv4Address": "[parameters('applicationGatewayPublicIP')]"
                          }
                        ],
                        "ttl": 300
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "customPrivateDnsZoneId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('customDomainName'))]"
                    },
                    "customPrivateDnsZoneName": {
                      "type": "string",
                      "value": "[parameters('customDomainName')]"
                    },
                    "internalDnsNames": {
                      "type": "array",
                      "value": [
                        {
                          "name": "Customer Site Internal",
                          "fqdn": "[format('customer-site.{0}', parameters('customDomainName'))]",
                          "target": "[format('{0}.privatelink.azurewebsites.net', parameters('customerSiteWebAppName'))]"
                        },
                        {
                          "name": "Admin Site Internal",
                          "fqdn": "[format('admin-site.{0}', parameters('customDomainName'))]",
                          "target": "[format('{0}.privatelink.azurewebsites.net', parameters('adminSiteWebAppName'))]"
                        },
                        {
                          "name": "Video API Internal",
                          "fqdn": "[format('video-api.{0}', parameters('customDomainName'))]",
                          "target": "[format('{0}.privatelink.azurewebsites.net', parameters('videoApiWebAppName'))]"
                        },
                        {
                          "name": "Music API Internal",
                          "fqdn": "[format('music-api.{0}', parameters('customDomainName'))]",
                          "target": "[format('{0}.privatelink.azurewebsites.net', parameters('musicApiWebAppName'))]"
                        },
                        {
                          "name": "Customer Public Web Internal",
                          "fqdn": "[format('customer-public-web.{0}', parameters('customDomainName'))]",
                          "target": "[parameters('applicationGatewayPublicIP')]"
                        },
                        {
                          "name": "Admin Public Web Internal",
                          "fqdn": "[format('admin-public-web.{0}', parameters('customDomainName'))]",
                          "target": "[parameters('applicationGatewayPublicIP')]"
                        }
                      ]
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "appConfigPrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'appConfigPrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "blobStoragePrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'blobStoragePrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "fileStoragePrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'fileStoragePrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "queueStoragePrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'queueStoragePrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "tableStoragePrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'tableStoragePrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "cosmosPrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'cosmosPrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "serviceBusPrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'serviceBusPrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "keyVaultPrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'keyVaultPrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "appServicePrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'appServicePrivateDnsZoneDeployment'), '2022-09-01').outputs.privateDnsZoneId.value, '')]"
            },
            "customPrivateDnsZoneId": {
              "type": "string",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'customPrivateDnsZoneDeployment'), '2022-09-01').outputs.customPrivateDnsZoneId.value, '')]"
            },
            "internalDnsNames": {
              "type": "array",
              "value": "[if(parameters('enablePrivateEndpoints'), reference(resourceId('Microsoft.Resources/deployments', 'customPrivateDnsZoneDeployment'), '2022-09-01').outputs.internalDnsNames.value, createArray())]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment')]"
      ]
    },
    {
      "condition": "[parameters('featureFlags').enableApplicationGateway]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "applicationGatewayDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('general').location]"
          },
          "vnetName": {
            "value": "[parameters('networking').vnetName]"
          },
          "appGatewaySubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment'), '2022-09-01').outputs.appGatewaySubnetId.value]"
          },
          "customerPublicWebAppName": {
            "value": "[parameters('webApps').apps.customerPublic]"
          },
          "customerSiteWebAppName": {
            "value": "[parameters('webApps').apps.customerSite]"
          },
          "adminPublicWebAppName": {
            "value": "[parameters('webApps').apps.adminPublic]"
          },
          "adminSiteWebAppName": {
            "value": "[parameters('webApps').apps.adminSite]"
          },
          "wafConfig": {
            "value": {
              "enabled": "[parameters('featureFlags').enableWAF]",
              "firewallMode": "[parameters('applicationGateway').waf.mode]",
              "ruleSetType": "OWASP",
              "ruleSetVersion": "[parameters('applicationGateway').waf.ruleSetVersion]",
              "disabledRuleGroups": [],
              "requestBodyCheck": "[parameters('applicationGateway').waf.requestBodyCheck]",
              "maxRequestBodySizeInKb": "[parameters('applicationGateway').waf.maxRequestBodySizeInKb]",
              "fileUploadLimitInMb": "[parameters('applicationGateway').waf.fileUploadLimitInMb]"
            }
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "4855120403734914750"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location for resources"
              }
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "VNet name for resource naming"
              }
            },
            "appGatewaySubnetId": {
              "type": "string",
              "metadata": {
                "description": "Application Gateway subnet ID"
              }
            },
            "customerPublicWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Customer public web app name"
              }
            },
            "customerSiteWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Customer site web app name"
              }
            },
            "adminPublicWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Admin public web app name"
              }
            },
            "adminSiteWebAppName": {
              "type": "string",
              "metadata": {
                "description": "Admin site web app name"
              }
            },
            "gatewaySkuConfig": {
              "type": "object",
              "defaultValue": {
                "name": "WAF_v2",
                "tier": "WAF_v2",
                "capacity": 2
              },
              "metadata": {
                "description": "Application Gateway SKU configuration"
              }
            },
            "wafConfig": {
              "type": "object",
              "defaultValue": {
                "enabled": true,
                "firewallMode": "Prevention",
                "ruleSetType": "OWASP",
                "ruleSetVersion": "3.2",
                "disabledRuleGroups": [],
                "requestBodyCheck": true,
                "maxRequestBodySizeInKb": 128,
                "fileUploadLimitInMb": 100
              },
              "metadata": {
                "description": "WAF configuration"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Additional tags for resources"
              }
            },
            "customConfig": {
              "type": "object",
              "defaultValue": {
                "backendPools": [],
                "httpSettings": [],
                "listeners": [],
                "routingRules": []
              },
              "metadata": {
                "description": "Custom configuration overrides"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-appgw-pip', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "condition": "[parameters('wafConfig').enabled]",
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-appgw-waf-policy', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "policySettings": {
                  "requestBodyCheck": "[parameters('wafConfig').requestBodyCheck]",
                  "maxRequestBodySizeInKb": "[parameters('wafConfig').maxRequestBodySizeInKb]",
                  "fileUploadLimitInMb": "[parameters('wafConfig').fileUploadLimitInMb]",
                  "state": "Enabled",
                  "mode": "[parameters('wafConfig').firewallMode]"
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "[parameters('wafConfig').ruleSetType]",
                      "ruleSetVersion": "[parameters('wafConfig').ruleSetVersion]",
                      "ruleGroupOverrides": "[parameters('wafConfig').disabledRuleGroups]"
                    }
                  ],
                  "exclusions": []
                },
                "customRules": []
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-appgw', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": "[parameters('gatewaySkuConfig')]",
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('appGatewaySubnetId')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGatewayFrontendIP",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgw-pip', parameters('vnetName')))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "port_80",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "backendAddressPools": "[reference(resourceId('Microsoft.Resources/deployments', 'appgw-backend-pools'), '2022-09-01').outputs.backendAddressPools.value]",
                "backendHttpSettingsCollection": "[reference(resourceId('Microsoft.Resources/deployments', 'appgw-http-settings'), '2022-09-01').outputs.backendHttpSettingsCollection.value]",
                "httpListeners": "[reference(resourceId('Microsoft.Resources/deployments', 'appgw-listeners'), '2022-09-01').outputs.httpListeners.value]",
                "requestRoutingRules": "[reference(resourceId('Microsoft.Resources/deployments', 'appgw-routing-rules'), '2022-09-01').outputs.requestRoutingRules.value]",
                "webApplicationFirewallConfiguration": "[if(parameters('wafConfig').enabled, createObject('enabled', parameters('wafConfig').enabled, 'firewallMode', parameters('wafConfig').firewallMode, 'ruleSetType', parameters('wafConfig').ruleSetType, 'ruleSetVersion', parameters('wafConfig').ruleSetVersion, 'disabledRuleGroups', parameters('wafConfig').disabledRuleGroups, 'requestBodyCheck', parameters('wafConfig').requestBodyCheck, 'maxRequestBodySizeInKb', parameters('wafConfig').maxRequestBodySizeInKb, 'fileUploadLimitInMb', parameters('wafConfig').fileUploadLimitInMb), null())]",
                "firewallPolicy": "[if(parameters('wafConfig').enabled, createObject('id', resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', format('{0}-appgw-waf-policy', parameters('vnetName')))), null())]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgw-pip', parameters('vnetName')))]",
                "[resourceId('Microsoft.Resources/deployments', 'appgw-backend-pools')]",
                "[resourceId('Microsoft.Resources/deployments', 'appgw-http-settings')]",
                "[resourceId('Microsoft.Resources/deployments', 'appgw-listeners')]",
                "[resourceId('Microsoft.Resources/deployments', 'appgw-routing-rules')]",
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', format('{0}-appgw-waf-policy', parameters('vnetName')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appgw-backend-pools",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "customerPublicWebAppName": {
                    "value": "[parameters('customerPublicWebAppName')]"
                  },
                  "customerSiteWebAppName": {
                    "value": "[parameters('customerSiteWebAppName')]"
                  },
                  "adminPublicWebAppName": {
                    "value": "[parameters('adminPublicWebAppName')]"
                  },
                  "adminSiteWebAppName": {
                    "value": "[parameters('adminSiteWebAppName')]"
                  },
                  "customBackendPools": {
                    "value": "[parameters('customConfig').backendPools]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "7023582365130424364"
                    }
                  },
                  "parameters": {
                    "customerPublicWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Customer public web app name"
                      }
                    },
                    "customerSiteWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Customer site web app name"
                      }
                    },
                    "adminPublicWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin public web app name"
                      }
                    },
                    "adminSiteWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin site web app name"
                      }
                    },
                    "customBackendPools": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Custom backend pools to add"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-public-pool",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "customerPublicWebAppName": {
                            "value": "[parameters('customerPublicWebAppName')]"
                          },
                          "customBackendAddresses": {
                            "value": []
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16846666633838806894"
                            }
                          },
                          "parameters": {
                            "customerPublicWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Customer public web app name"
                              }
                            },
                            "customBackendAddresses": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Custom backend addresses to add to the pool"
                              }
                            }
                          },
                          "variables": {
                            "backendPool": {
                              "name": "customerPublicPool",
                              "properties": {
                                "backendAddresses": "[concat(createArray(createObject('fqdn', format('{0}.azurewebsites.net', parameters('customerPublicWebAppName')))), parameters('customBackendAddresses'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "backendPool": {
                              "type": "object",
                              "value": "[variables('backendPool')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-site-pool",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "customerSiteWebAppName": {
                            "value": "[parameters('customerSiteWebAppName')]"
                          },
                          "customBackendAddresses": {
                            "value": []
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14530304520265888042"
                            }
                          },
                          "parameters": {
                            "customerSiteWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Customer site web app name"
                              }
                            },
                            "customBackendAddresses": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Custom backend addresses to add to the pool"
                              }
                            }
                          },
                          "variables": {
                            "backendPool": {
                              "name": "customerSitePool",
                              "properties": {
                                "backendAddresses": "[concat(createArray(createObject('fqdn', format('{0}.azurewebsites.net', parameters('customerSiteWebAppName')))), parameters('customBackendAddresses'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "backendPool": {
                              "type": "object",
                              "value": "[variables('backendPool')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-public-pool",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "adminPublicWebAppName": {
                            "value": "[parameters('adminPublicWebAppName')]"
                          },
                          "customBackendAddresses": {
                            "value": []
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15825683657126529169"
                            }
                          },
                          "parameters": {
                            "adminPublicWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Admin public web app name"
                              }
                            },
                            "customBackendAddresses": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Custom backend addresses to add to the pool"
                              }
                            }
                          },
                          "variables": {
                            "backendPool": {
                              "name": "adminPublicPool",
                              "properties": {
                                "backendAddresses": "[concat(createArray(createObject('fqdn', format('{0}.azurewebsites.net', parameters('adminPublicWebAppName')))), parameters('customBackendAddresses'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "backendPool": {
                              "type": "object",
                              "value": "[variables('backendPool')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-site-pool",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "adminSiteWebAppName": {
                            "value": "[parameters('adminSiteWebAppName')]"
                          },
                          "customBackendAddresses": {
                            "value": []
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "9113735950276843855"
                            }
                          },
                          "parameters": {
                            "adminSiteWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Admin site web app name"
                              }
                            },
                            "customBackendAddresses": {
                              "type": "array",
                              "defaultValue": [],
                              "metadata": {
                                "description": "Custom backend addresses to add to the pool"
                              }
                            }
                          },
                          "variables": {
                            "backendPool": {
                              "name": "adminSitePool",
                              "properties": {
                                "backendAddresses": "[concat(createArray(createObject('fqdn', format('{0}.azurewebsites.net', parameters('adminSiteWebAppName')))), parameters('customBackendAddresses'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "backendPool": {
                              "type": "object",
                              "value": "[variables('backendPool')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "backendAddressPools": {
                      "type": "array",
                      "value": "[concat(createArray(reference(resourceId('Microsoft.Resources/deployments', 'customer-public-pool'), '2022-09-01').outputs.backendPool.value, reference(resourceId('Microsoft.Resources/deployments', 'customer-site-pool'), '2022-09-01').outputs.backendPool.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-public-pool'), '2022-09-01').outputs.backendPool.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-site-pool'), '2022-09-01').outputs.backendPool.value), parameters('customBackendPools'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appgw-http-settings",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "customHttpSettings": {
                    "value": "[parameters('customConfig').httpSettings]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "14550010633081629015"
                    }
                  },
                  "parameters": {
                    "requestTimeout": {
                      "type": "int",
                      "defaultValue": 20,
                      "metadata": {
                        "description": "Request timeout in seconds"
                      }
                    },
                    "cookieBasedAffinity": {
                      "type": "string",
                      "defaultValue": "Disabled",
                      "metadata": {
                        "description": "Cookie based affinity setting"
                      }
                    },
                    "pickHostNameFromBackendAddress": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Pick host name from backend address"
                      }
                    },
                    "customHttpSettings": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Custom HTTP settings to add"
                      }
                    }
                  },
                  "variables": {
                    "standardHttpSettings": [
                      {
                        "name": "appGatewayBackendHttpSettings",
                        "properties": {
                          "port": 80,
                          "protocol": "Http",
                          "cookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                          "pickHostNameFromBackendAddress": "[parameters('pickHostNameFromBackendAddress')]",
                          "requestTimeout": "[parameters('requestTimeout')]"
                        }
                      },
                      {
                        "name": "appGatewayBackendHttpsSettings",
                        "properties": {
                          "port": 443,
                          "protocol": "Https",
                          "cookieBasedAffinity": "[parameters('cookieBasedAffinity')]",
                          "pickHostNameFromBackendAddress": "[parameters('pickHostNameFromBackendAddress')]",
                          "requestTimeout": "[parameters('requestTimeout')]"
                        }
                      }
                    ]
                  },
                  "resources": [],
                  "outputs": {
                    "backendHttpSettingsCollection": {
                      "type": "array",
                      "value": "[concat(variables('standardHttpSettings'), parameters('customHttpSettings'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appgw-listeners",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "customerPublicWebAppName": {
                    "value": "[parameters('customerPublicWebAppName')]"
                  },
                  "customerSiteWebAppName": {
                    "value": "[parameters('customerSiteWebAppName')]"
                  },
                  "adminPublicWebAppName": {
                    "value": "[parameters('adminPublicWebAppName')]"
                  },
                  "adminSiteWebAppName": {
                    "value": "[parameters('adminSiteWebAppName')]"
                  },
                  "customListeners": {
                    "value": "[parameters('customConfig').listeners]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "14802537075783222333"
                    }
                  },
                  "parameters": {
                    "vnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet name for resource naming"
                      }
                    },
                    "customerPublicWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Customer public web app name"
                      }
                    },
                    "customerSiteWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Customer site web app name"
                      }
                    },
                    "adminPublicWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin public web app name"
                      }
                    },
                    "adminSiteWebAppName": {
                      "type": "string",
                      "metadata": {
                        "description": "Admin site web app name"
                      }
                    },
                    "customListeners": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Custom listeners to add"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-public-listener",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "customerPublicWebAppName": {
                            "value": "[parameters('customerPublicWebAppName')]"
                          },
                          "protocol": {
                            "value": "Http"
                          },
                          "frontendPortName": {
                            "value": "port_80"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "5969217849140063238"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "customerPublicWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Customer public web app name"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "Http",
                              "metadata": {
                                "description": "Protocol for the listener"
                              }
                            },
                            "frontendPortName": {
                              "type": "string",
                              "defaultValue": "port_80",
                              "metadata": {
                                "description": "Frontend port name"
                              }
                            }
                          },
                          "variables": {
                            "listener": {
                              "name": "customerPublicListener",
                              "properties": {
                                "frontendIPConfiguration": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}-appgw', parameters('vnetName')), 'appGatewayFrontendIP')]"
                                },
                                "frontendPort": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}-appgw', parameters('vnetName')), parameters('frontendPortName'))]"
                                },
                                "protocol": "[parameters('protocol')]",
                                "hostName": "[format('{0}.azurewebsites.net', parameters('customerPublicWebAppName'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "listener": {
                              "type": "object",
                              "value": "[variables('listener')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-site-listener",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "customerSiteWebAppName": {
                            "value": "[parameters('customerSiteWebAppName')]"
                          },
                          "protocol": {
                            "value": "Http"
                          },
                          "frontendPortName": {
                            "value": "port_80"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "10514495773191286170"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "customerSiteWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Customer site web app name"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "Http",
                              "metadata": {
                                "description": "Protocol for the listener"
                              }
                            },
                            "frontendPortName": {
                              "type": "string",
                              "defaultValue": "port_80",
                              "metadata": {
                                "description": "Frontend port name"
                              }
                            }
                          },
                          "variables": {
                            "listener": {
                              "name": "customerSiteListener",
                              "properties": {
                                "frontendIPConfiguration": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}-appgw', parameters('vnetName')), 'appGatewayFrontendIP')]"
                                },
                                "frontendPort": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}-appgw', parameters('vnetName')), parameters('frontendPortName'))]"
                                },
                                "protocol": "[parameters('protocol')]",
                                "hostName": "[format('{0}.azurewebsites.net', parameters('customerSiteWebAppName'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "listener": {
                              "type": "object",
                              "value": "[variables('listener')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-public-listener",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "adminPublicWebAppName": {
                            "value": "[parameters('adminPublicWebAppName')]"
                          },
                          "protocol": {
                            "value": "Http"
                          },
                          "frontendPortName": {
                            "value": "port_80"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14262886821877191690"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "adminPublicWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Admin public web app name"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "Http",
                              "metadata": {
                                "description": "Protocol for the listener"
                              }
                            },
                            "frontendPortName": {
                              "type": "string",
                              "defaultValue": "port_80",
                              "metadata": {
                                "description": "Frontend port name"
                              }
                            }
                          },
                          "variables": {
                            "listener": {
                              "name": "adminPublicListener",
                              "properties": {
                                "frontendIPConfiguration": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}-appgw', parameters('vnetName')), 'appGatewayFrontendIP')]"
                                },
                                "frontendPort": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}-appgw', parameters('vnetName')), parameters('frontendPortName'))]"
                                },
                                "protocol": "[parameters('protocol')]",
                                "hostName": "[format('{0}.azurewebsites.net', parameters('adminPublicWebAppName'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "listener": {
                              "type": "object",
                              "value": "[variables('listener')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-site-listener",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "adminSiteWebAppName": {
                            "value": "[parameters('adminSiteWebAppName')]"
                          },
                          "protocol": {
                            "value": "Http"
                          },
                          "frontendPortName": {
                            "value": "port_80"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12938865410266293961"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "adminSiteWebAppName": {
                              "type": "string",
                              "metadata": {
                                "description": "Admin site web app name"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "Http",
                              "metadata": {
                                "description": "Protocol for the listener"
                              }
                            },
                            "frontendPortName": {
                              "type": "string",
                              "defaultValue": "port_80",
                              "metadata": {
                                "description": "Frontend port name"
                              }
                            }
                          },
                          "variables": {
                            "listener": {
                              "name": "adminSiteListener",
                              "properties": {
                                "frontendIPConfiguration": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}-appgw', parameters('vnetName')), 'appGatewayFrontendIP')]"
                                },
                                "frontendPort": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}-appgw', parameters('vnetName')), parameters('frontendPortName'))]"
                                },
                                "protocol": "[parameters('protocol')]",
                                "hostName": "[format('{0}.azurewebsites.net', parameters('adminSiteWebAppName'))]"
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "listener": {
                              "type": "object",
                              "value": "[variables('listener')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "httpListeners": {
                      "type": "array",
                      "value": "[concat(createArray(reference(resourceId('Microsoft.Resources/deployments', 'customer-public-listener'), '2022-09-01').outputs.listener.value, reference(resourceId('Microsoft.Resources/deployments', 'customer-site-listener'), '2022-09-01').outputs.listener.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-public-listener'), '2022-09-01').outputs.listener.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-site-listener'), '2022-09-01').outputs.listener.value), parameters('customListeners'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "appgw-routing-rules",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetName": {
                    "value": "[parameters('vnetName')]"
                  },
                  "customRoutingRules": {
                    "value": "[parameters('customConfig').routingRules]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "168733719866160744"
                    }
                  },
                  "parameters": {
                    "vnetName": {
                      "type": "string",
                      "metadata": {
                        "description": "VNet name for resource naming"
                      }
                    },
                    "customRoutingRules": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Custom routing rules to add"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-public-rule",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "priority": {
                            "value": 100
                          },
                          "ruleType": {
                            "value": "Basic"
                          },
                          "backendHttpSettingsName": {
                            "value": "appGatewayBackendHttpSettings"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "11992108896586849335"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "priority": {
                              "type": "int",
                              "defaultValue": 100,
                              "metadata": {
                                "description": "Rule priority"
                              }
                            },
                            "ruleType": {
                              "type": "string",
                              "defaultValue": "Basic",
                              "metadata": {
                                "description": "Rule type"
                              }
                            },
                            "backendHttpSettingsName": {
                              "type": "string",
                              "defaultValue": "appGatewayBackendHttpSettings",
                              "metadata": {
                                "description": "Backend HTTP settings name"
                              }
                            }
                          },
                          "variables": {
                            "routingRule": {
                              "name": "customerPublicRule",
                              "properties": {
                                "ruleType": "[parameters('ruleType')]",
                                "priority": "[parameters('priority')]",
                                "httpListener": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}-appgw', parameters('vnetName')), 'customerPublicListener')]"
                                },
                                "backendAddressPool": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}-appgw', parameters('vnetName')), 'customerPublicPool')]"
                                },
                                "backendHttpSettings": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}-appgw', parameters('vnetName')), parameters('backendHttpSettingsName'))]"
                                }
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "routingRule": {
                              "type": "object",
                              "value": "[variables('routingRule')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "customer-site-rule",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "priority": {
                            "value": 200
                          },
                          "ruleType": {
                            "value": "Basic"
                          },
                          "backendHttpSettingsName": {
                            "value": "appGatewayBackendHttpsSettings"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "18263068884859894334"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "priority": {
                              "type": "int",
                              "defaultValue": 200,
                              "metadata": {
                                "description": "Rule priority"
                              }
                            },
                            "ruleType": {
                              "type": "string",
                              "defaultValue": "Basic",
                              "metadata": {
                                "description": "Rule type"
                              }
                            },
                            "backendHttpSettingsName": {
                              "type": "string",
                              "defaultValue": "appGatewayBackendHttpsSettings",
                              "metadata": {
                                "description": "Backend HTTP settings name"
                              }
                            }
                          },
                          "variables": {
                            "routingRule": {
                              "name": "customerSiteRule",
                              "properties": {
                                "ruleType": "[parameters('ruleType')]",
                                "priority": "[parameters('priority')]",
                                "httpListener": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}-appgw', parameters('vnetName')), 'customerSiteListener')]"
                                },
                                "backendAddressPool": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}-appgw', parameters('vnetName')), 'customerSitePool')]"
                                },
                                "backendHttpSettings": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}-appgw', parameters('vnetName')), parameters('backendHttpSettingsName'))]"
                                }
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "routingRule": {
                              "type": "object",
                              "value": "[variables('routingRule')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-public-rule",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "priority": {
                            "value": 300
                          },
                          "ruleType": {
                            "value": "Basic"
                          },
                          "backendHttpSettingsName": {
                            "value": "appGatewayBackendHttpSettings"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14547217703754736444"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "priority": {
                              "type": "int",
                              "defaultValue": 300,
                              "metadata": {
                                "description": "Rule priority"
                              }
                            },
                            "ruleType": {
                              "type": "string",
                              "defaultValue": "Basic",
                              "metadata": {
                                "description": "Rule type"
                              }
                            },
                            "backendHttpSettingsName": {
                              "type": "string",
                              "defaultValue": "appGatewayBackendHttpSettings",
                              "metadata": {
                                "description": "Backend HTTP settings name"
                              }
                            }
                          },
                          "variables": {
                            "routingRule": {
                              "name": "adminPublicRule",
                              "properties": {
                                "ruleType": "[parameters('ruleType')]",
                                "priority": "[parameters('priority')]",
                                "httpListener": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}-appgw', parameters('vnetName')), 'adminPublicListener')]"
                                },
                                "backendAddressPool": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}-appgw', parameters('vnetName')), 'adminPublicPool')]"
                                },
                                "backendHttpSettings": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}-appgw', parameters('vnetName')), parameters('backendHttpSettingsName'))]"
                                }
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "routingRule": {
                              "type": "object",
                              "value": "[variables('routingRule')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "admin-site-rule",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnetName": {
                            "value": "[parameters('vnetName')]"
                          },
                          "priority": {
                            "value": 400
                          },
                          "ruleType": {
                            "value": "Basic"
                          },
                          "backendHttpSettingsName": {
                            "value": "appGatewayBackendHttpsSettings"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "11034114601511849886"
                            }
                          },
                          "parameters": {
                            "vnetName": {
                              "type": "string",
                              "metadata": {
                                "description": "VNet name for resource naming"
                              }
                            },
                            "priority": {
                              "type": "int",
                              "defaultValue": 400,
                              "metadata": {
                                "description": "Rule priority"
                              }
                            },
                            "ruleType": {
                              "type": "string",
                              "defaultValue": "Basic",
                              "metadata": {
                                "description": "Rule type"
                              }
                            },
                            "backendHttpSettingsName": {
                              "type": "string",
                              "defaultValue": "appGatewayBackendHttpsSettings",
                              "metadata": {
                                "description": "Backend HTTP settings name"
                              }
                            }
                          },
                          "variables": {
                            "routingRule": {
                              "name": "adminSiteRule",
                              "properties": {
                                "ruleType": "[parameters('ruleType')]",
                                "priority": "[parameters('priority')]",
                                "httpListener": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}-appgw', parameters('vnetName')), 'adminSiteListener')]"
                                },
                                "backendAddressPool": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}-appgw', parameters('vnetName')), 'adminSitePool')]"
                                },
                                "backendHttpSettings": {
                                  "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}-appgw', parameters('vnetName')), parameters('backendHttpSettingsName'))]"
                                }
                              }
                            }
                          },
                          "resources": [],
                          "outputs": {
                            "routingRule": {
                              "type": "object",
                              "value": "[variables('routingRule')]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "requestRoutingRules": {
                      "type": "array",
                      "value": "[concat(createArray(reference(resourceId('Microsoft.Resources/deployments', 'customer-public-rule'), '2022-09-01').outputs.routingRule.value, reference(resourceId('Microsoft.Resources/deployments', 'customer-site-rule'), '2022-09-01').outputs.routingRule.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-public-rule'), '2022-09-01').outputs.routingRule.value, reference(resourceId('Microsoft.Resources/deployments', 'admin-site-rule'), '2022-09-01').outputs.routingRule.value), parameters('customRoutingRules'))]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "applicationGatewayId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways', format('{0}-appgw', parameters('vnetName')))]"
            },
            "applicationGatewayName": {
              "type": "string",
              "value": "[format('{0}-appgw', parameters('vnetName'))]"
            },
            "publicIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgw-pip', parameters('vnetName'))), '2023-09-01').ipAddress]"
            },
            "publicIPId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgw-pip', parameters('vnetName')))]"
            },
            "wafPolicyId": {
              "type": "string",
              "value": "[if(parameters('wafConfig').enabled, resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', format('{0}-appgw-waf-policy', parameters('vnetName'))), '')]"
            },
            "wafPolicyName": {
              "type": "string",
              "value": "[if(parameters('wafConfig').enabled, format('{0}-appgw-waf-policy', parameters('vnetName')), '')]"
            },
            "wafEnabled": {
              "type": "bool",
              "value": "[parameters('wafConfig').enabled]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment')]"
      ]
    },
    {
      "condition": "[parameters('featureFlags').enableApiManagement]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "apiManagementDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('general').location]"
          },
          "apiManagementName": {
            "value": "[parameters('apiManagement').name]"
          },
          "publisherEmail": {
            "value": "[parameters('apiManagement').publisherEmail]"
          },
          "publisherName": {
            "value": "[parameters('apiManagement').publisherName]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment'), '2022-09-01').outputs.vnetId.value]"
          },
          "apiManagementSubnetName": {
            "value": "APIManagementSubnet"
          },
          "videoApiUrl": {
            "value": "[format('https://{0}.azurewebsites.net', parameters('webApps').apps.videoApi)]"
          },
          "musicApiUrl": {
            "value": "[format('https://{0}.azurewebsites.net', parameters('webApps').apps.musicApi)]"
          },
          "apiManagementSku": {
            "value": "[parameters('apiManagement').sku]"
          },
          "apiManagementCapacity": {
            "value": "[parameters('apiManagement').capacity]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "2761718865155629982"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "apiManagementName": {
              "type": "string"
            },
            "publisherEmail": {
              "type": "string"
            },
            "publisherName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "apiManagementSubnetName": {
              "type": "string"
            },
            "videoApiUrl": {
              "type": "string"
            },
            "musicApiUrl": {
              "type": "string"
            },
            "apiManagementSku": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "apiManagementCapacity": {
              "type": "int",
              "defaultValue": 1
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2023-05-01-preview",
              "name": "[parameters('apiManagementName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('apiManagementSku')]",
                "capacity": "[parameters('apiManagementCapacity')]"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "virtualNetworkType": "[if(equals(parameters('apiManagementSku'), 'Premium'), 'External', 'None')]",
                "virtualNetworkConfiguration": "[if(equals(parameters('apiManagementSku'), 'Premium'), createObject('subnetResourceId', format('{0}/subnets/{1}', parameters('vnetId'), parameters('apiManagementSubnetName'))), null())]"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "video-api",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apiManagementName": {
                    "value": "[parameters('apiManagementName')]"
                  },
                  "videoApiUrl": {
                    "value": "[parameters('videoApiUrl')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11576732324320763062"
                    }
                  },
                  "parameters": {
                    "apiManagementName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the API Management service"
                      }
                    },
                    "videoApiUrl": {
                      "type": "string",
                      "metadata": {
                        "description": "The URL of the Video API backend service"
                      }
                    },
                    "apiPath": {
                      "type": "string",
                      "defaultValue": "video",
                      "metadata": {
                        "description": "API path"
                      }
                    },
                    "protocols": {
                      "type": "array",
                      "defaultValue": [
                        "https"
                      ],
                      "metadata": {
                        "description": "API protocols"
                      }
                    },
                    "subscriptionRequired": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Subscription required"
                      }
                    },
                    "backendProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "metadata": {
                        "description": "Backend protocol"
                      }
                    },
                    "additionalBackendProperties": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Additional backend properties"
                      }
                    },
                    "additionalApiProperties": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Additional API properties"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "video-api-backend",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "videoApiUrl": {
                            "value": "[parameters('videoApiUrl')]"
                          },
                          "protocol": {
                            "value": "[parameters('backendProtocol')]"
                          },
                          "additionalProperties": {
                            "value": "[parameters('additionalBackendProperties')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "4598806908406235792"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "videoApiUrl": {
                              "type": "string",
                              "metadata": {
                                "description": "The URL of the Video API backend service"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "metadata": {
                                "description": "Backend protocol"
                              }
                            },
                            "additionalProperties": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Additional backend properties"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/backends",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}', parameters('apiManagementName'), 'video-api-backend')]",
                              "properties": "[union(createObject('protocol', parameters('protocol'), 'url', parameters('videoApiUrl'), 'description', 'Video API Backend for managing video content', 'title', 'Video API Backend'), parameters('additionalProperties'))]"
                            }
                          ],
                          "outputs": {
                            "videoApiBackendId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/backends', parameters('apiManagementName'), 'video-api-backend')]"
                            },
                            "videoApiBackendName": {
                              "type": "string",
                              "value": "video-api-backend"
                            },
                            "videoApiBackendUrl": {
                              "type": "string",
                              "value": "[parameters('videoApiUrl')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "video-api-definition",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "videoApiUrl": {
                            "value": "[parameters('videoApiUrl')]"
                          },
                          "apiPath": {
                            "value": "[parameters('apiPath')]"
                          },
                          "protocols": {
                            "value": "[parameters('protocols')]"
                          },
                          "subscriptionRequired": {
                            "value": "[parameters('subscriptionRequired')]"
                          },
                          "additionalProperties": {
                            "value": "[parameters('additionalApiProperties')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15151198319951519664"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "videoApiUrl": {
                              "type": "string",
                              "metadata": {
                                "description": "The URL of the Video API backend service"
                              }
                            },
                            "apiPath": {
                              "type": "string",
                              "defaultValue": "video",
                              "metadata": {
                                "description": "API path"
                              }
                            },
                            "protocols": {
                              "type": "array",
                              "defaultValue": [
                                "https"
                              ],
                              "metadata": {
                                "description": "API protocols"
                              }
                            },
                            "subscriptionRequired": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Subscription required"
                              }
                            },
                            "additionalProperties": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Additional API properties"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}', parameters('apiManagementName'), 'video-api')]",
                              "properties": "[union(createObject('displayName', 'Video API', 'description', 'API for managing video content', 'path', parameters('apiPath'), 'protocols', parameters('protocols'), 'subscriptionRequired', parameters('subscriptionRequired'), 'serviceUrl', parameters('videoApiUrl')), parameters('additionalProperties'))]"
                            }
                          ],
                          "outputs": {
                            "videoApiName": {
                              "type": "string",
                              "value": "video-api"
                            },
                            "videoApiId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'video-api')]"
                            },
                            "videoApiUrl": {
                              "type": "string",
                              "value": "[format('https://{0}.azure-api.net/{1}', parameters('apiManagementName'), parameters('apiPath'))]"
                            },
                            "videoApiDisplayName": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'video-api'), '2023-05-01-preview').displayName]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'video-api-backend')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "video-api-operations",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "videoApiName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiName.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "4687912258313485166"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "videoApiName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the Video API"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'get-videos')]",
                              "properties": {
                                "displayName": "Get Videos",
                                "method": "GET",
                                "urlTemplate": "/",
                                "description": "Get all videos"
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'post-video')]",
                              "properties": {
                                "displayName": "Create Video",
                                "method": "POST",
                                "urlTemplate": "/",
                                "description": "Create a new video"
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'get-video-by-id')]",
                              "properties": {
                                "displayName": "Get Video by ID",
                                "method": "GET",
                                "urlTemplate": "/{id}",
                                "description": "Get a specific video by ID",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Video ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'put-video')]",
                              "properties": {
                                "displayName": "Update Video",
                                "method": "PUT",
                                "urlTemplate": "/{id}",
                                "description": "Update an existing video",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Video ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'delete-video')]",
                              "properties": {
                                "displayName": "Delete Video",
                                "method": "DELETE",
                                "urlTemplate": "/{id}",
                                "description": "Delete a video",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Video ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {
                            "videoApiGetOperationName": {
                              "type": "string",
                              "value": "get-videos"
                            },
                            "videoApiPostOperationName": {
                              "type": "string",
                              "value": "post-video"
                            },
                            "videoApiGetByIdOperationName": {
                              "type": "string",
                              "value": "get-video-by-id"
                            },
                            "videoApiPutOperationName": {
                              "type": "string",
                              "value": "put-video"
                            },
                            "videoApiDeleteOperationName": {
                              "type": "string",
                              "value": "delete-video"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'video-api-definition')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "video-api-policies",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "videoApiName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiName.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "2559891750840830846"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "videoApiName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the Video API"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis/policies",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('videoApiName'), 'policy')]",
                              "properties": {
                                "value": "    <policies>\r\n      <inbound>\r\n        <base />\r\n        <set-backend-service backend-id=\"video-api-backend\" />\r\n        <rate-limit calls=\"100\" renewal-period=\"60\" />\r\n        <cors allow-credentials=\"true\">\r\n          <allowed-origins>\r\n            <origin>*</origin>\r\n          </allowed-origins>\r\n          <allowed-methods>\r\n            <method>GET</method>\r\n            <method>POST</method>\r\n            <method>PUT</method>\r\n            <method>DELETE</method>\r\n            <method>OPTIONS</method>\r\n          </allowed-methods>\r\n          <allowed-headers>\r\n            <header>*</header>\r\n          </allowed-headers>\r\n        </cors>\r\n      </inbound>\r\n      <backend>\r\n        <base />\r\n      </backend>\r\n      <outbound>\r\n        <base />\r\n        <set-header name=\"X-Powered-By\" exists-action=\"override\">\r\n          <value>Azure API Management</value>\r\n        </set-header>\r\n      </outbound>\r\n      <on-error>\r\n        <base />\r\n        <set-header name=\"ErrorSource\" exists-action=\"override\">\r\n          <value>video-api-gateway</value>\r\n        </set-header>\r\n      </on-error>\r\n    </policies>\r\n    ",
                                "format": "xml"
                              }
                            }
                          ],
                          "outputs": {
                            "videoApiPolicyName": {
                              "type": "string",
                              "value": "policy"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'video-api-definition')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "videoApiName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiName.value]"
                    },
                    "videoApiId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiId.value]"
                    },
                    "videoApiUrl": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiUrl.value]"
                    },
                    "videoApiDisplayName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-definition'), '2022-09-01').outputs.videoApiDisplayName.value]"
                    },
                    "videoApiBackendId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-backend'), '2022-09-01').outputs.videoApiBackendId.value]"
                    },
                    "videoApiBackendName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api-backend'), '2022-09-01').outputs.videoApiBackendName.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "music-api",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apiManagementName": {
                    "value": "[parameters('apiManagementName')]"
                  },
                  "musicApiUrl": {
                    "value": "[parameters('musicApiUrl')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "5185452719326842059"
                    }
                  },
                  "parameters": {
                    "apiManagementName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the API Management service"
                      }
                    },
                    "musicApiUrl": {
                      "type": "string",
                      "metadata": {
                        "description": "The URL of the Music API backend service"
                      }
                    },
                    "apiPath": {
                      "type": "string",
                      "defaultValue": "music",
                      "metadata": {
                        "description": "API path"
                      }
                    },
                    "protocols": {
                      "type": "array",
                      "defaultValue": [
                        "https"
                      ],
                      "metadata": {
                        "description": "API protocols"
                      }
                    },
                    "subscriptionRequired": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Subscription required"
                      }
                    },
                    "backendProtocol": {
                      "type": "string",
                      "defaultValue": "http",
                      "metadata": {
                        "description": "Backend protocol"
                      }
                    },
                    "additionalBackendProperties": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Additional backend properties"
                      }
                    },
                    "additionalApiProperties": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Additional API properties"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "music-api-backend",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "musicApiUrl": {
                            "value": "[parameters('musicApiUrl')]"
                          },
                          "protocol": {
                            "value": "[parameters('backendProtocol')]"
                          },
                          "additionalProperties": {
                            "value": "[parameters('additionalBackendProperties')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12653372098346828232"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "musicApiUrl": {
                              "type": "string",
                              "metadata": {
                                "description": "The URL of the Music API backend service"
                              }
                            },
                            "protocol": {
                              "type": "string",
                              "defaultValue": "http",
                              "metadata": {
                                "description": "Backend protocol"
                              }
                            },
                            "additionalProperties": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Additional backend properties"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/backends",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}', parameters('apiManagementName'), 'music-api-backend')]",
                              "properties": "[union(createObject('protocol', parameters('protocol'), 'url', parameters('musicApiUrl'), 'description', 'Music API Backend for managing music content', 'title', 'Music API Backend'), parameters('additionalProperties'))]"
                            }
                          ],
                          "outputs": {
                            "musicApiBackendId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/backends', parameters('apiManagementName'), 'music-api-backend')]"
                            },
                            "musicApiBackendName": {
                              "type": "string",
                              "value": "music-api-backend"
                            },
                            "musicApiBackendUrl": {
                              "type": "string",
                              "value": "[parameters('musicApiUrl')]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "music-api-definition",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "musicApiUrl": {
                            "value": "[parameters('musicApiUrl')]"
                          },
                          "apiPath": {
                            "value": "[parameters('apiPath')]"
                          },
                          "protocols": {
                            "value": "[parameters('protocols')]"
                          },
                          "subscriptionRequired": {
                            "value": "[parameters('subscriptionRequired')]"
                          },
                          "additionalProperties": {
                            "value": "[parameters('additionalApiProperties')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "10087846321365587884"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "musicApiUrl": {
                              "type": "string",
                              "metadata": {
                                "description": "The URL of the Music API backend service"
                              }
                            },
                            "apiPath": {
                              "type": "string",
                              "defaultValue": "music",
                              "metadata": {
                                "description": "API path"
                              }
                            },
                            "protocols": {
                              "type": "array",
                              "defaultValue": [
                                "https"
                              ],
                              "metadata": {
                                "description": "API protocols"
                              }
                            },
                            "subscriptionRequired": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Subscription required"
                              }
                            },
                            "additionalProperties": {
                              "type": "object",
                              "defaultValue": {},
                              "metadata": {
                                "description": "Additional API properties"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}', parameters('apiManagementName'), 'music-api')]",
                              "properties": "[union(createObject('displayName', 'Music API', 'description', 'API for managing music content', 'path', parameters('apiPath'), 'protocols', parameters('protocols'), 'subscriptionRequired', parameters('subscriptionRequired'), 'serviceUrl', parameters('musicApiUrl')), parameters('additionalProperties'))]"
                            }
                          ],
                          "outputs": {
                            "musicApiName": {
                              "type": "string",
                              "value": "music-api"
                            },
                            "musicApiId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'music-api')]"
                            },
                            "musicApiUrl": {
                              "type": "string",
                              "value": "[format('https://{0}.azure-api.net/{1}', parameters('apiManagementName'), parameters('apiPath'))]"
                            },
                            "musicApiDisplayName": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagementName'), 'music-api'), '2023-05-01-preview').displayName]"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'music-api-backend')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "music-api-operations",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "musicApiName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiName.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "15473207081183853068"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "musicApiName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the Music API"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'get-music')]",
                              "properties": {
                                "displayName": "Get Music",
                                "method": "GET",
                                "urlTemplate": "/",
                                "description": "Get all music"
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'post-music')]",
                              "properties": {
                                "displayName": "Create Music",
                                "method": "POST",
                                "urlTemplate": "/",
                                "description": "Create a new music track"
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'get-music-by-id')]",
                              "properties": {
                                "displayName": "Get Music by ID",
                                "method": "GET",
                                "urlTemplate": "/{id}",
                                "description": "Get a specific music track by ID",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Music ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'put-music')]",
                              "properties": {
                                "displayName": "Update Music",
                                "method": "PUT",
                                "urlTemplate": "/{id}",
                                "description": "Update an existing music track",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Music ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "Microsoft.ApiManagement/service/apis/operations",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'delete-music')]",
                              "properties": {
                                "displayName": "Delete Music",
                                "method": "DELETE",
                                "urlTemplate": "/{id}",
                                "description": "Delete a music track",
                                "templateParameters": [
                                  {
                                    "name": "id",
                                    "description": "Music ID",
                                    "type": "string",
                                    "required": true
                                  }
                                ]
                              }
                            }
                          ],
                          "outputs": {
                            "musicApiGetOperationName": {
                              "type": "string",
                              "value": "get-music"
                            },
                            "musicApiPostOperationName": {
                              "type": "string",
                              "value": "post-music"
                            },
                            "musicApiGetByIdOperationName": {
                              "type": "string",
                              "value": "get-music-by-id"
                            },
                            "musicApiPutOperationName": {
                              "type": "string",
                              "value": "put-music"
                            },
                            "musicApiDeleteOperationName": {
                              "type": "string",
                              "value": "delete-music"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'music-api-definition')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "music-api-policies",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "apiManagementName": {
                            "value": "[parameters('apiManagementName')]"
                          },
                          "musicApiName": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiName.value]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "12266519709151090503"
                            }
                          },
                          "parameters": {
                            "apiManagementName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the API Management service"
                              }
                            },
                            "musicApiName": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the Music API"
                              }
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.ApiManagement/service/apis/policies",
                              "apiVersion": "2023-05-01-preview",
                              "name": "[format('{0}/{1}/{2}', parameters('apiManagementName'), parameters('musicApiName'), 'policy')]",
                              "properties": {
                                "value": "    <policies>\r\n      <inbound>\r\n        <base />\r\n        <set-backend-service backend-id=\"music-api-backend\" />\r\n        <rate-limit calls=\"100\" renewal-period=\"60\" />\r\n        <cors allow-credentials=\"true\">\r\n          <allowed-origins>\r\n            <origin>*</origin>\r\n          </allowed-origins>\r\n          <allowed-methods>\r\n            <method>GET</method>\r\n            <method>POST</method>\r\n            <method>PUT</method>\r\n            <method>DELETE</method>\r\n            <method>OPTIONS</method>\r\n          </allowed-methods>\r\n          <allowed-headers>\r\n            <header>*</header>\r\n          </allowed-headers>\r\n        </cors>\r\n      </inbound>\r\n      <backend>\r\n        <base />\r\n      </backend>\r\n      <outbound>\r\n        <base />\r\n        <set-header name=\"X-Powered-By\" exists-action=\"override\">\r\n          <value>Azure API Management</value>\r\n        </set-header>\r\n      </outbound>\r\n      <on-error>\r\n        <base />\r\n        <set-header name=\"ErrorSource\" exists-action=\"override\">\r\n          <value>music-api-gateway</value>\r\n        </set-header>\r\n      </on-error>\r\n    </policies>\r\n    ",
                                "format": "xml"
                              }
                            }
                          ],
                          "outputs": {
                            "musicApiPolicyName": {
                              "type": "string",
                              "value": "policy"
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'music-api-definition')]"
                      ]
                    }
                  ],
                  "outputs": {
                    "musicApiName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiName.value]"
                    },
                    "musicApiId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiId.value]"
                    },
                    "musicApiUrl": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiUrl.value]"
                    },
                    "musicApiDisplayName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-definition'), '2022-09-01').outputs.musicApiDisplayName.value]"
                    },
                    "musicApiBackendId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-backend'), '2022-09-01').outputs.musicApiBackendId.value]"
                    },
                    "musicApiBackendName": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api-backend'), '2022-09-01').outputs.musicApiBackendName.value]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apiManagementName'))]"
              ]
            }
          ],
          "outputs": {
            "apiManagementName": {
              "type": "string",
              "value": "[parameters('apiManagementName')]"
            },
            "apiManagementGatewayUrl": {
              "type": "string",
              "value": "[format('https://{0}.azure-api.net', parameters('apiManagementName'))]"
            },
            "apiManagementDeveloperPortalUrl": {
              "type": "string",
              "value": "[format('https://{0}.developer.azure-api.net', parameters('apiManagementName'))]"
            },
            "apiManagementManagementUrl": {
              "type": "string",
              "value": "[format('https://{0}.management.azure-api.net', parameters('apiManagementName'))]"
            },
            "videoApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'video-api'), '2022-09-01').outputs.videoApiUrl.value]"
            },
            "musicApiUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'music-api'), '2022-09-01').outputs.musicApiUrl.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkDeployment')]"
      ]
    }
  ],
  "outputs": {
    "applicationGatewayPublicIP": {
      "type": "string",
      "value": "[if(parameters('featureFlags').enableApplicationGateway, reference(resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment'), '2022-09-01').outputs.publicIPAddress.value, '')]"
    },
    "applicationGatewayWAF": {
      "type": "object",
      "value": "[if(parameters('featureFlags').enableApplicationGateway, createObject('wafEnabled', reference(resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment'), '2022-09-01').outputs.wafEnabled.value, 'wafPolicyId', reference(resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment'), '2022-09-01').outputs.wafPolicyId.value, 'wafPolicyName', reference(resourceId('Microsoft.Resources/deployments', 'applicationGatewayDeployment'), '2022-09-01').outputs.wafPolicyName.value, 'wafMode', parameters('applicationGateway').waf.mode, 'ruleSetVersion', parameters('applicationGateway').waf.ruleSetVersion), createObject('wafEnabled', false(), 'wafPolicyId', '', 'wafPolicyName', '', 'wafMode', '', 'ruleSetVersion', ''))]"
    },
    "apiManagementGatewayUrl": {
      "type": "string",
      "value": "[if(parameters('featureFlags').enableApiManagement, reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeployment'), '2022-09-01').outputs.apiManagementGatewayUrl.value, '')]"
    },
    "apiManagementDeveloperPortalUrl": {
      "type": "string",
      "value": "[if(parameters('featureFlags').enableApiManagement, reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeployment'), '2022-09-01').outputs.apiManagementDeveloperPortalUrl.value, '')]"
    },
    "apiManagementManagementUrl": {
      "type": "string",
      "value": "[if(parameters('featureFlags').enableApiManagement, reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeployment'), '2022-09-01').outputs.apiManagementManagementUrl.value, '')]"
    },
    "apiEndpoints": {
      "type": "array",
      "value": "[if(parameters('featureFlags').enableApiManagement, createArray(createObject('name', 'Video API', 'url', reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeployment'), '2022-09-01').outputs.videoApiUrl.value, 'description', 'Video API through API Management'), createObject('name', 'Music API', 'url', reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeployment'), '2022-09-01').outputs.musicApiUrl.value, 'description', 'Music API through API Management')), createArray())]"
    },
    "internalDnsNames": {
      "type": "array",
      "value": "[if(parameters('featureFlags').enablePrivateEndpoints, reference(resourceId('Microsoft.Resources/deployments', 'privateDnsZonesDeployment'), '2022-09-01').outputs.internalDnsNames.value, createArray())]"
    },
    "apiManagementNSGId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'apiManagementNSGDeployment'), '2022-09-01').outputs.apiManagementNSGId.value]"
    }
  }
}